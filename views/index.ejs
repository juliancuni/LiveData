<!doctype html>
<html lang="en" class="h-100">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css"
        integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
        crossorigin="" />
</head>
<style>
    html,
    body {
        height: 100%;
        margin: 0px;
        padding: 0px;
        position: relative;
    }

    .liveDataMap {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
    }

    .pilotList {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 2;
        width: 25%;
        /* background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto', 'sans-serif';
        line-height: 30px;
        padding-left: 10px; */
    }
</style>

<body class="d-flex flex-column w-100 h-100">
    <main role="main" class="flex-shrink-0">
        <div class="liveDataMap" id="liveDataMap">
        </div>
        <div class="container">
            <div class="pilotList">
                <div class="d-block d-sm-none">
                    <button class="btn btn-secondary " type="button">Lista</button>
                </div>
                <div class="d-none d-sm-block">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Lista e pilotÃ«ve</h5>
                            <p class="card-text">Some quick example text to build on the panel title and make up the
                                bulk of
                                the panel's content.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js"
        integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og=="
        crossorigin=""></script>
    <!-- <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script> -->
</body>
<script>

    //Set map to 0. 
    const lFMap = L.map('liveDataMap').setView([0, 0], 3);
    //Set default icon. Gjej nje icone te pershtatshme
    const icon = L.icon({
        iconUrl: '/img/iss.png',
    });

    const markerSelf = L.marker([0, 0]).addTo(lFMap);
    const markerPilot = L.marker([0, 0]).addTo(lFMap);
    //Test ISS. Ruaje njehere
    // const marker = L.marker([0, 0], { title: "Internation Space Station", icon: icon }).addTo(lFMap);
    const attribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
    const tileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
    const tiles = L.tileLayer(tileUrl, { attribution });
    tiles.addTo(lFMap);


    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    function showPosition(position) {
        //not needed. 
        // lFMap.setView([position.coords.latitude, position.coords.longitude]);
        markerSelf.setLatLng([position.coords.latitude, position.coords.longitude]).bindTooltip("Self").openTooltip().on('click', clickZoom);
        lFMap.fitBounds([markerPilot.getLatLng(), markerSelf.getLatLng()])
    }

    getLocation();
    markerPilot.setLatLng(["<%= pilot.x %>", "<%= pilot.y %>"]).bindTooltip("Pilot").openTooltip().on('click', clickZoom);


    //Test ISS position data
    const api_uri = 'https://api.wheretheiss.at/v1/satellites/25544';

    let latLngs = [];
    async function getISS() {
        const response = await fetch(api_uri);
        const data = await response.json();
        const { latitude, longitude } = data;
        const latLng = [latitude, longitude];
        lFMap.setView(latLng);
        marker.setLatLng(latLng).bindTooltip("ISS").openTooltip().on('click', clickZoom);
        latLngs.push(latLng);
        const polyline = L.polyline(latLngs, { color: 'red' }).addTo(lFMap);
        lFMap.fitBounds(polyline.getBounds());
    }

    // getISS();
    function clickZoom(e) {
        lFMap.setView(e.target.getLatLng(), 15);
    }
    // setInterval(getISS, 1000);
</script>

</html>